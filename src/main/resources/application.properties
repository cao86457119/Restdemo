server.port=801

#DataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:8066/TESTDB?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&characterEncoding=utf-8
spring.database.schema=TESTDB
spring.datasource.username=root
spring.datasource.password=123456
#初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

#
#
## 所有主从库
#sharding.jdbc.datasource.names=ds_master_0,ds_master_1,ds_master_0_slave_0,ds_master_0_slave_1,ds_master_1_slave_0,ds_master_1_slave_1
#
## ds_master_0
#sharding.jdbc.datasource.ds_master_0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_0.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_0.url=jdbc:mysql://127.0.0.1:3306/ds_master_0?useSSL=false
#sharding.jdbc.datasource.ds_master_0.username=travis
#sharding.jdbc.datasource.ds_master_0.password=
#
## slave for ds_master_0
#sharding.jdbc.datasource.ds_master_0_slave_0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_0_slave_0.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_0_slave_0.url=jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_0?useSSL=false
#sharding.jdbc.datasource.ds_master_0_slave_0.username=travis
#sharding.jdbc.datasource.ds_master_0_slave_0.password=
#sharding.jdbc.datasource.ds_master_0_slave_1.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_0_slave_1.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_0_slave_1.url=jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_1?useSSL=false
#sharding.jdbc.datasource.ds_master_0_slave_1.username=travis
#sharding.jdbc.datasource.ds_master_0_slave_1.password=
#
## ds_master_1
#sharding.jdbc.datasource.ds_master_1.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_1.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_1.url=jdbc:mysql://127.0.0.1:3306/ds_master_1?useSSL=false
#sharding.jdbc.datasource.ds_master_1.username=travis
#sharding.jdbc.datasource.ds_master_1.password=
#
## slave for ds_master_1
#sharding.jdbc.datasource.ds_master_1_slave_0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_1_slave_0.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_1_slave_0.url=jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_0?useSSL=false
#sharding.jdbc.datasource.ds_master_1_slave_0.username=travis
#sharding.jdbc.datasource.ds_master_1_slave_0.password=
#sharding.jdbc.datasource.ds_master_1_slave_1.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds_master_1_slave_1.driverClassName=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds_master_1_slave_1.url=jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_1?useSSL=false
#sharding.jdbc.datasource.ds_master_1_slave_1.username=travis
#sharding.jdbc.datasource.ds_master_1_slave_1.password=
#
## 分库规则
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=city_id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds_${city_id % 2}
#
## 分表规则
#sharding.jdbc.config.sharding.tables.t_user.actualDataNodes=ds_${0..1}.t_user_${0..1}
#sharding.jdbc.config.sharding.tables.t_user.tableStrategy.inline.shardingColumn=user_id
#sharding.jdbc.config.sharding.tables.t_user.tableStrategy.inline.algorithmExpression=t_user_${user_id % 2}
## 使用user_id作为分布式主键
#sharding.jdbc.config.sharding.tables.t_user.keyGeneratorColumnName=user_id
#
## 逻辑主从库名和实际主从库映射关系
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.masterDataSourceName=ds_master_0
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.slaveDataSourceNames=ds_master_0_slave_0, ds_master_0_slave_1
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.masterDataSourceName=ds_master_1
#sharding.jdbc.config.sharding.master-slave-rules.ds_1.slaveDataSourceNames=ds_master_1_slave_0, ds_master_1_slave_1

log4j.rootLogger=DEBUG,A1
log4j.logger.org.apache=DEBUG
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%t] [%c]-[%p] %m%n



#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#redis
spring.redis.host=localhost
spring.redis.port=6379

#springcache
spring.cache.cache-names=cache1,cache2
spring.cache.type=redis

#mybatis
mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.typeAliasesPackage=com.example.hz.demo.generated

elastic.server.url=172.16.11.96